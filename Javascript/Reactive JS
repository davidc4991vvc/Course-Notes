                                  Reactive JS 3D Buzz Programming
                                  
                    SECTION 1 - Introduction
1 - Introduction - This is a basic introduction to Reactive programming, Reactive programming is a methodology.
    Reactive Extensions are libraries to bring Reactive Programming to many languages. Reactive is used by companies 
    such as MS, Google and Netflix which wrote the Java RX extensions.

2 - Course Overview  
    A basic intro to what the course curriculum consists of.

3 - Review of Programming Paradigms
    A basic overview of widely used programming paradigms such as OOP.

4 - Core Reactive Concepts
    

5 - Building our Playground: Part 1

6 - Building our Playground: Part 2

7 - Using the Playground 



                    SECTION 2 - Motivation
1 - Autocomplete: Traditional Implementation 
    The section is going to consist of 2 implementations of the smae thing, in this case it is an auto complete box
*** When using GULP the command gulp watch:scripts will ensure that scripts are built as soon as they are written.
    Import $ from 'jquery' will import functionality from the JQuery library into the file.
    Import $ from 'jquery' is equivalent to var money = require('jquery') but the former is correct ES6 syntax.
*** Many developers prefix variables that point to Jquery library elements with the "$" symber eg const $title   
    Very quick rundown on using Promises, there are more indepth explanations of promises in other notes.
    There is a simulated async function generated to provide illustration of potential problems the using Reactive
    Extensions will solve.

2 - Autocomplete: Reactive Implementation
    The above video uses tradtional means to build an auto complete box, in this video Reactive extensions are used 
    instead to illustrate the differences.



                    SECTION 3 - The Core of Reactive Extensions
1 - Observables, Operators, and Subscriptions 

2 - Creating Observables: Part 1

3 - Creating Observables: Part 2

4 - Built in Observables

5 - Using RxJS with DOM Events, Node Functions and Promises

6 - Subjects

7 - RxJS Source Code, Resources and Documentation 

8 - Sharing Observable Sequences: Hot vs Cold, Publish and Share



                    SECTION 4 - Operators that Everyone Should Know
1 - Do / Finally / StartWith / Filter

2 - Concat / Merge

3 - Map / MergeMap / SwitchMap 

4 - Reduce / Scan

5 - Buffer / ToArray 

6 - First / Last / Single / Skip / Take 

7 - Zip / WithLatestFrom / CombineLatest 

8 - Error Handling: Catch and Retry

9 - Conclusion



                    SECTION 5 - The End
1 - Final example : Drag and Drop

2 - Conclusion
