                    Course Notes from the 3D Buzz Udemy Course
                    Modern JavaScript: Building Real-World, Real-Time Apps
                    Project Based course covering the latest JS development techiniques (Highly Recommended)
                    
  

                    Section 1: Introduction
1 - Introduction
Basic intro to the course, the reaoning beind it and what to expect



                    Section 2: Express and Socket.io Primer
1 - Overview
    A quick overview of what th section contains

2 - Express: Basic Routes 
    Express is a web framework that sits on the NodeJS HTTP module.
    It is a very popular framework.
    *** npm init is used to start off projects
    Express can be installed using npm install express -- save where the save directive is important.
    The course uses Visual Studio Code a free editor and the ESLint plugin
    The "use strict" directive is used in some files
    A server is created using new http.Server and the created app is passed in
    server.listen is used to bind a server to a port, the first item passed in is a port number which in a lot of cases is 3000, the
    second item passed in is a callback function.
    *** In production settings the port is likely to be an environmental variable.
    Express is very minimal and will do little out of the box
    To get express to recognise where things are you can use either routes or middleware, in this case it is routes.
    To set up routes use Http verbs in this case app.get this takes the path eg "/" and then a callback function which needs 2
    items a request and a response.
    Nodemon is a very useful tool which monitors for changes and restarts automatically

3 - Express: Middleware and View Engines 

4 - Socket.io: Setup 

5 - Socket.io: Chat Application 



                    Section 3: Build Pipeline with Webpack
1 - Overview

2 - Server Webpack: Configuration Part 1 

3 - Server Webpack: Configuration Part 2 

4 - Server Webpack: Configuration Final 

5 - Server Webpack: Compile from Gulp 

6 - Server Webpack: Server Reload 

7 - Client Webpack: Configuration Part 1 

8 - Client Webpack: Configuration Part 2 

9 - Server Skeleton 

10 - Client Webpack: Development Server Middleware 

11 - Conclusion



                    Section 4: Application Architecture
1 - Overview

2 - Layout 

3 - Observable Socket: Part 1 

4 - Observable Socket: Part 2 

5 - Observable Socket: Part 3 

6 - Observable Socket: Part 4 

7 - Component Framework 

8 - Component Stubs: Part 1 

9 - Component Stubs: Part 2 

10 - Server Stubs 



                    Section 5: Feature: Users
1 - Server Module 

2 - Users Store 

3 - Users Component 

4 - Aside: Safe Subscribe 

5 - Logging In 

6 - Logging Out 



                    Section 6: Feature: Chat
1 - Overview

2 - Logging In with the Chat Form 

3 - Chat Module and Store 

4 - Chat List 



                    Section 7: Feature: Playlist
1 - Overview

2 - Playlist Data 

3 - Playlist Items 

4 - Playlist Items Style 

5 - Playlist Toolbar 

6 - Adding Items: Part 1 

7 - Adding Items: Part 2 

8 - Adding Items: Part 3 

9 - Playlist Store Bug 

10 - Adding Items: Part 4 - Youtube API 

11 - Syncing Current Item 

12 - Displaying the Current Item 

13 - Context Menu: Part 1 - Markup 

14 - Context Menu: Part 2 - Changing Item 

15 - Context Menu: Part 3 - Deleting Items 

16 - Playlist Chrome 

17 - Sorting: Part 1 - Drag and Drop 

18 - Sorting: Part 2 - Implementation 

19 - Sorting: Part 3 - Animation 



                    Section 8: Feature: Player
1 - Overview

2 - Player Component 

3 - YouTube Player 



                    Section 9: The End
1 - Conclusion and More Ideas 
