                    Notes from the Udemy Course
                    Ruby on Rails A Test Driven Approach
                    By Mashrur Hossain & Emmanuel Asante
                    This is a Project Driven Course to highlight TDD
                    Project Built With previous course version available at
                    https://github.com/marb61a/bookstore_app
                    
                    


                    Section 1: Introduction
1 - Course Introduction
Basic introduction to the course from the instructor

2 - The Finished Application
The student is shown a fully functioning version of the completed project

3  - Multiple parts of the course: Split structure 
An explanation from the instructors for the (new) structure of the course which covers
both Rails\Ruby and TDD Conventions

4 - Overview and kickoff of local dev vs cloud9 
Developing in Rails on local machines can be challenging in some environments as Ruby & Rails

5 - Local installation of ruby 
A quick guide on how to install Ruby on your local machine

6 - Installation of Rails in local env 

7 - Version control with Git 

8 - Sign up for cloud9 IDE 

9 - Familiarity with cloud IDE 

10 - Cloud9 directory familiarity 

11 - Installation of Rails in cloud IDE 



                    Section 2: Introduction to testing
1 - MVC structure of Rails Apps 
All Rails apps use Model-View-Controller conventions in construction. An excellent tutorial on explaining
MVC is available here - http://www.bogotobogo.com/RubyOnRails/RubyOnRails_Model_View_Controller_MVC.php. Also
because Rails has very definite ideas on where various files should go it is referred to as a highly opinionated
framework.

2 - Introduction to different kinds of automated testing 

3 - Start a new rails app 
In order to generate a new rails app you need to use the following command
rails new "project name" - this will generate a lot of files all in the folder of the project name

4 - Advanced automated testing setup 

5 - Guardfile code (Article)

6 - RVM usage and other unix processes 

7 - First test for articles index 

8 - Build articles listing page and turn test suite green 



                    Section 3: Setup with code repositories and production deploy
1 - Introduction to section 3 
A basic introduction to what is coming in the section

2 - Sign up for bitbucket 
How to signup for an account at Bitbucket an online code version controller, this is used instead
of Github. Bitbucket allows for free users to have private repositories (repositories are basically projects)
whic stops their source code being seen.

3 - Create git repo and push code to bitbucket 

4 - Signup for Heroku and deploy to production 



                    Section 4: Learn unit testing to build models using TDD
1 - Introduction to section 4 
A basic introduction to what is coming in the section

2 - Unit test example model part 1: spec and test creation 

3 - Unit test example model part 2: recipe validations and completion 

4 - Unit test example for users part 1: spec and tests 

5 - Unit test example for users part 2: email regex and validations 

6 - Section 4 conclusion 



                    Section 5: Implement TDD for model and wrap up unit testing
1 - Create article model and articles table with spec and tests 

2 - More tests and validations for article model 

3 - Homework assignment: Create users tests and model 

4 - Section 5 conclusion and handoff to part 2 of course 
Conclusion of the section and the handoff to the project part of the course



                    Section 6: Setup of Development Environment and Writing Model Specs
1 - Installing Ruby and Rails

2 - Setting up a Github Account
As discussed above, the first section uses Bitbuck but Github is much the same, it maybe well
to know both.

Lecture 36	
Complete Application Files
09:47
Lecture 37	
Creating a New Rails Project
Preview
12:05
Lecture 38	
Test-Driven Development
03:32
Lecture 39	
Installing and Setting Up RSpec and Capybara
Preview
11:04
Lecture 40	
Author Model Specs --- Adding Fabrication Gem
Preview
17:25
Lecture 41	
Author Model Specs -- Implementation and Validation
12:51



                    Section 7: Writing Authors Controller Specs
1 - Specs for the 'index' and 'show' actions

2 - Specs for the 'new' action

3 - Styling Author New Form

4 - Specs for the 'create' action --- Successful Path

Lecture 46	
Specs for the 'create' action --- Unsuccessful Path
09:57
Lecture 47	
Specs for the 'edit' and 'update' actions---Successful path
17:49
Lecture 48	
Specs for the 'edit' and 'update' actions---Unsuccessful path
06:10
Lecture 49	
Specs for the 'delete' action
Preview
16:04



                    Section 8: Creating Publisher
1 - Creating Publisher Model and Introducing Shoulda Matchers




                    Section 9: Relationship between entitities
1 - Dealing with One-to-Many Relationship Between Publisher and Book

2 - Dealing with Many-to-Many Relationship Between Author and Book




                    Section 10: Writing Feature Tests
1 - "Creating Author" Feature Test---Successful Path

2 - "Creating Author" Feature Test---Failure Path



                    Section 11: Creating the Book Model and Controller
Lecture 55	
Creating the Book Model
16:06
Lecture 56	
Exercise: Implementing the Book Controller given controller specs
02:01
Lecture 57	
Exercise files
Article
Lecture 58	
Exercise solution
Article
Section 12: Revisiting the Many-to-Many Relationship: Has-Many Through
Lecture 59	
Adding has_many :through Relationships to Book and Author Models
15:36
Lecture 60	
Creating the Book Feature Test---Writing the Test
11:36
Lecture 61	
Creating the Book Feature Test---Writing the View Template
17:54
Lecture 62	
Using jQuery UI Datepicker to Simplify Date Entry
08:56
Section 13: File uploading
Lecture 63	
Adding File Field to Form
06:38
Lecture 64	
Setting Up Dropbox for File Upload
12:47
Lecture 65	
Setting Up Carrierwave
10:35
Lecture 66	
Seeding Data In Rails
14:36
Section 14: User Signup
Lecture 67	
Introducing The Mechanics of Signing Up
01:03
Lecture 68	
Creating the User Model---Writing the Model Specs
Preview
12:41
Lecture 69	
Creating the User Model---Validating the Attributes
12:22
Lecture 70	
Exercise: Implementing the Users Controller
01:13
Lecture 71	
Writing the "Creating User" Feature Test
11:44
Lecture 72	
Introducing Regular Expression (Regex)
09:06
Lecture 73	
Validating the Format of the Email Field
07:00
Lecture 74	
Exercise: Implementing the "Showing User" Profile
01:30
Lecture 75	
User Show View Template
Article
Lecture 76	
Solution to Showing User Profile Implementation
Article
Section 15: Authentication from scratch
Lecture 77	
Signing in---Creating the Sessions Controller Specs
11:18
Lecture 78	
Signing in---Implementing the 'new' and 'create' Actions
13:40
Lecture 79	
Signing in---Signing in Feature Test and Implementation
06:30
Lecture 80	
Signing in---Refactoring the 'create' Action Code
15:31
Lecture 81	
Signing Out
09:19
Section 16: Basic Access Control
Lecture 82	
Adding an Admin Field
06:21
Lecture 83	
Restricting Access To Guest Users
19:09
Lecture 84	
Restricting Access To Non-Admin Users and Introduction to Shared Examples
19:55
Lecture 85	
Fixing The Broken Feature Specs
11:44
Lecture 86	
Testing the Access Restrictions in the Browser
12:29
Lecture 87	
Friendly Forwarding
08:38
Section 17: Creating an Admin Namespace
Lecture 88	
Implementing the Admin Namespace and Moving the Author Resources
14:45
Lecture 89	
Fixing Broken Author and Book Specs
17:14
Lecture 90	
Fixing Rest of Broken Specs
15:29
Lecture 91	
Hiding Admin-Only Links From Unauthorized Users
08:25
Section 18: Creating a Book Catalogue
Lecture 92	
Creating the Catalog Controller and Views
08:12
Lecture 93	
Searching for Books --- Writing the Book Search Feature Test
15:58
Lecture 94	
Searching for Books --- Implementing the 'search' Action
17:31
Section 19: Adding Shopping Cart
Lecture 95	
Creating a Cart
11:39
Lecture 96	
Creating Cart Items---Creating the Model and Controller
17:38
Lecture 97	
Creating Cart Items---Implementing the 'create' action and Cart 'show' Page
15:33
Lecture 98	
Implementing the Cart Show View Template
03:43
Lecture 99	
Calculating Cart Total Amount
15:23
Lecture 100	
Deleting a Cart
07:30
Lecture 101	
Creating a Cart Using Ajax
14:51
Section 20: Checking Out
Lecture 102	
Introduction to the Checkout Process
01:36
Lecture 103	
Pagination
07:14
Lecture 104	
Using Nested Attributes in the Model
10:57
Lecture 105	
Using Nested Attributes in the View
12:04
Section 21: Order Processing
Lecture 106	
Creating the Order Model
11:35
Lecture 107	
Creating a Stripe Account
08:33
Lecture 108	
Creating Orders Controller 'new' Action
06:47
Lecture 109	
Sending Email From the Application
14:43
Lecture 110	
Installing the Stripe Gem in the Application
10:14
Lecture 111	
Creating Orders Controller 'create' Action
15:43
Lecture 112	
Adding Checkout Button
07:19
Lecture 113	
Creating Orders' Feature Test With Javascript
19:13
Lecture 114	
Hiding the 'Checkout' and 'Clear Cart' Buttons
07:56
Lecture 115	
Viewing Emails in the Browser
06:05
Section 22: Securing the application further
Lecture 116	
Using Random Token
11:53
Section 23: Resetting User Password
Lecture 117	
How Password Resets Work
05:30
Lecture 118	
The Mechanics of Resetting Password
18:22
Lecture 119	
Invalidating Old Token After Successful Password Reset
12:36
Lecture 120	
Password Reset Feature Test
07:47
Lecture 121	
Running And Verifying All Specs
08:21
Section 24: Deployment
Lecture 122	
Deploying The Application To Heroku
13:50
                
