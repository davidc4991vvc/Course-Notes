                    Course Notes from the Udemy Course
                    Complete React Web App Developer
                          By Andrew Mead
                          
                          
                    Section 1: Intro
1 - Why Should I Learn React?
The first lecture is the course author outlining his reasons for learning ReactJS which is commonly referred
to as a framework, over other framworks such as AngularJS. Some dispute the claim that React JS is a framework
and is instead library which can be used in conjunction with other frameworks.

  
                    Section 2: Getting Setup
1 - Installing Atom
Atom is an open source code which is used in the course in place of a more heavyweight IDE such as Visual Studio.
In this video the author shows how to install the Atom Editor.

2 - Installing Git & Bash (Important For Windows Users)
Git is a version control system which is widely used by developers of all kinds. Git is used during the course
to ensure that project code is saved. Git itself is installed on the local machine however to ensure that there 
is no code loss, code is pushed to an online repository such as Github or Bitbucket which are both free.
BASH is a linux shell which has features that the standard windows command prompt lacks but that packages that
will be used during the course need, a windows version of the BASH shell has been made available and is highly 
recommended due to the power it brings users.

3 - Intro To Command Line

4 - Installing Node.js


                    Section 3: Hello React
1 - Creating Your Web Server

2 - Hello React!

3 - Atom Editor Plugins (Optional)

4 - Your First React Component

5 - Learning JSX

6 - Component Properties

7 - User Events & Callbacks

8 - Component State

9 - Nested Components: Part 1

10 - Nested Components: Part 2

11 - Aside: Props & State

12 - Section Challenge

Quiz 1	React Basics Quiz 6 questions


                    Section 4: A Better React Project
1 - What is Webpack? (And Installing It)

2 - Generating Our Bundle
06:29
Lecture 20	
The Webpack Config File
05:23
Lecture 21	
Adding Babel & JSX Support
09:01
Lecture 22	
Refactoring Your Components
09:42
Lecture 23	
Webpack: Custom Package Names
05:40
Lecture 24	
Boilerplate Project
06:11
Lecture 25	
Bonus: Using Experimental JavaScript Features
04:48
Section 5: Routing & Our Weather App
Lecture 26	
Front-end Routing
04:10
Lecture 27	
Adding React-Router
16:17
Lecture 28	
Creating Our Pages
16:39
Lecture 29	
Why use <Link/>?
08:14
Lecture 30	
Creating WeatherForm & WeatherMessage
09:57
Lecture 31	
Exploring OpenWeatherMap.org
09:28
Lecture 32	
ES6 Promises
18:02
Lecture 33	
Faking Our Call
13:17
Lecture 34	
Making Our API Call
17:49
Lecture 35	
Adding Loading Text
09:36
Lecture 36	
Debugging & The React Developer Tools
07:20
Lecture 37	
Advanced Debugging
11:43
Lecture 38	
ES6 Aside: Arrow Functions
15:29
Lecture 39	
Refactoring: Stateless Functional Components
11:37
Section 6: Deploying Your App To Production
Lecture 40	
Intro: Tools You'll Use
01:33
Lecture 41	
Installing Git
03:33
Lecture 42	
Adding Git To Your App
11:00
Lecture 43	
Joining GitHub & Generating SSH Keys
11:00
Lecture 44	
Pushing To GitHub
07:30
Lecture 45	
Heroku Signup & Toolbelt
05:04
Lecture 46	
Deploying Your App
11:05
Lecture 47	
Feature Workflow
09:12
Lecture 48	
Fixing localhost
04:05
Section 7: Styling Your App With Foundation
Lecture 49	
Intro: Foundation
02:03
Lecture 50	
Installing Foundation
10:28
Lecture 51	
Styling Navigation
14:36
Lecture 52	
Styling Examples Page
12:06
Lecture 53	
Styling About Page
05:59
Lecture 54	
Styling Weather Page
06:42
Lecture 55	
Adding A Modal For Errors (Part 1)
16:32
Lecture 56	
Adding A Modal For Errors (Part 2)
11:39
Lecture 57	
Adding Custom CSS
12:12
Lecture 58	
Setting Up SCSS
10:10
Lecture 59	
Linking To Location & Wiring Up Nav Form
17:12
Lecture 60	
Fixing The Error Modal
07:45
Lecture 61	
Updating Our Boilerplate
10:11
Section 8: Testing & Component Lifecycle
Lecture 62	
Project Overview
02:51
Lecture 63	
Component Breakdown
02:13
Lecture 64	
Adding The Navigation Bar
15:35
Lecture 65	
Customizing The Navigation Bar
19:56
Lecture 66	
Basics Of Testing
17:37
Lecture 67	
Configuring Tests With Webpack & React
19:41
Lecture 68	
Adding Routes & Container Components
13:16
Lecture 69	
Clock Component
17:17
Lecture 70	
Clock Component: Part 2
18:10
Lecture 71	
Countdown Form
19:08
Lecture 72	
Testing Our Form With Spies
16:14
Lecture 73	
Starting The Count Down
11:38
Lecture 74	
Testing That Counting Down Works
12:16
Lecture 75	
Creating Our Controls
17:52
Lecture 76	
Pausing, Starting, and Resetting
15:48
Lecture 77	
Component Lifecycle
11:16
Lecture 78	
Testing Pausing & Resetting
12:21
Lecture 79	
Project Setup: Timer
03:11
Lecture 80	
Project Solution: Timer (Part 1)
09:13
Lecture 81	
Project Solution: Timer (Part 2)
17:07
Lecture 82	
Foundation Settings & Karma Issues
12:59
Lecture 83	
Final Boilerplate
08:42
Section 9: Building A Todo Application
Lecture 84	
App Demo & Learning Goals
05:27
Lecture 85	
Creating The Root Component (TodoApp)
12:37
Lecture 86	
Rendering Lists In React (TodoList & Todo)
14:05
Lecture 87	
Testing List Components
13:14
Lecture 88	
Challenge: AddTodo Is On You!
18:27
Lecture 89	
Setting Up The Filter Component
13:50
Lecture 90	
Testing The Filter Component
10:35
Lecture 91	
The Spread Operator
12:55
Lecture 92	
Wiring Up AddTodo
12:07
Lecture 93	
Toggling Todos
11:35
Lecture 94	
Testing Toggling Todos
13:05
Lecture 95	
Storing Todos In Local Storage
17:58
Lecture 96	
Testing Our TodoAPI
18:44
Lecture 97	
Wiring Up Search (Part 1)
13:56
Lecture 98	
Wiring Up Search (Part 2)
16:44
Lecture 99	
Dates With Moment
14:09
Lecture 100	
Adding Created At & Completed At Timestamps
18:49
Lecture 101	
Styling TodoApp, AddTodo, & TodoSearch
13:28
Lecture 102	
Styling Todo
16:00
Section 10: Redux
Lecture 103	
Why Redux?
07:03
Lecture 104	
Installing Redux
04:56
Lecture 105	
Pure Functions
08:38
Lecture 106	
Creating A Reducer & Getting App State
12:13
Lecture 107	
Dispatching & Handling Actions
11:38
Lecture 108	
Subscribing To Changes & Debugging
14:11
Lecture 109	
Redux Actions: Add To Arrays
12:41
Lecture 110	
Redux Actions: Removing From Arrays
11:27
Lecture 111	
Working With Multiple Reducers
14:31
Lecture 112	
Creating Action Generators
12:25
Lecture 113	
Asynchronous Actions
16:14
Lecture 114	
Organizing Your Actions and Reducers
16:46
Lecture 115	
Todo: Creating & Testing Actions
17:45
Lecture 116	
Todo: SearchText & ShowCompleted Reducers
18:24
Lecture 117	
Todo: Todos Reducer
17:19
Lecture 118	
Todo: Setting Up The Redux Store
11:21
Lecture 119	
React-Redux: Provider & Connect
14:22
Lecture 120	
Testing Reduxed Components
15:16
Lecture 121	
Testing Reduxed Components (Part 2)
06:26
Lecture 122	
Refactoring AddTodo
10:24
Lecture 123	
Refactoring TodoSearch
16:15
Lecture 124	
Setting Up Local Storage With Redux
17:21
Section 11: Databases & Authentication With Firebase
Lecture 125	
Setting Up Firebase
10:33
Lecture 126	
Saving Data
08:44
Lecture 127	
Updating Data
09:19
Lecture 128	
Removing & Navigating Data
05:50
Lecture 129	
Fetching Your Data
11:01
Lecture 130	
Working With Arrays
10:58
Lecture 131	
Async Actions (Adding Todos To Firebase)
14:58
Lecture 132	
Testing Async Actions
16:04
Lecture 133	
Saving Todo Updates
09:52
Lecture 134	
Testing Todo Updates
17:31
Lecture 135	
Fetch Todos From Firebase
11:20
Lecture 136	
Testing startAddTodos()
11:57
Lecture 137	
Webpack On Heroku
13:45
Lecture 138	
Environment Variables & Separate Databases
17:18
Lecture 139	
Heroku Environment Variables
05:03
Lecture 140	
Adding Login Page & Logout Button
16:42
Lecture 141	
Firebase Login & Logout
17:05
Lecture 142	
Private Pages & Redirects
16:36
Lecture 143	
Login Reducer & Actions
18:57
Lecture 144	
Firebase Security Rules
13:58
Lecture 145	
Testing With Authentication
13:45
Lecture 146	
Clearing Todos on Logout
07:43
