                    Course Notes from the Udemy Course
                    Complete React Web App Developer
                          By Andrew Mead
  *** This is a combined Project & Theory based course, completed projects urls will be listed in appropriate sections
                          
                          
                    Section 1: Intro
1 - Why Should I Learn React?
The first lecture is the course author outlining his reasons for learning ReactJS which is commonly referred
to as a framework, over other framworks such as AngularJS. Some dispute the claim that React JS is a framework
and is instead library which can be used in conjunction with other frameworks.

  
                    Section 2: Getting Setup
1 - Installing Atom
Atom is an open source code which is used in the course in place of a more heavyweight IDE such as Visual Studio.
In this video the author shows how to install the Atom Editor.

2 - Installing Git & Bash (Important For Windows Users)
Git is a version control system which is widely used by developers of all kinds. Git is used during the course
to ensure that project code is saved. Git itself is installed on the local machine however to ensure that there 
is no code loss, code is pushed to an online repository such as Github or Bitbucket which are both free.
BASH is a linux shell which has features that the standard windows command prompt lacks but that packages that
will be used during the course need, a windows version of the BASH shell has been made available and is highly 
recommended due to the power it brings users.

3 - Intro To Command Line
A basic intro to some often used commands which you will need during the course.
There is a much better and more comprehensive tutorial available at - http://ryanstutorials.net/linuxtutorial/

4 - Installing Node.js
This video covers the installation of Node.js, this may change according to versions of both Node and also
changes to platform and versions 
For Windows - http://blog.teamtreehouse.com/install-node-js-npm-windows
For Linux - http://nodeguide.com/beginner.html
For OSX - http://blog.teamtreehouse.com/install-node-js-npm-mac


                    Section 3: Hello React
1 - Creating Your Web Server

2 - Hello React!

3 - Atom Editor Plugins (Optional)

4 - Your First React Component

5 - Learning JSX

6 - Component Properties

7 - User Events & Callbacks

8 - Component State

9 - Nested Components: Part 1

10 - Nested Components: Part 2

11 - Aside: Props & State

12 - Section Challenge

Quiz 1	React Basics Quiz 6 questions



                    Section 4: A Better React Project
1 - What is Webpack? (And Installing It)

2 - Generating Our Bundle

3 - The Webpack Config File

4 - Adding Babel & JSX Support

5 - Refactoring Your Components

6 - Webpack: Custom Package Names

7 - Boilerplate Project

8 - Bonus: Using Experimental JavaScript Features



                    Section 5: Routing & Our Weather App
1 - Front-end Routing

2 - Adding React-Router

3 - Creating Our Pages

4 - Why use <Link/>?

5 - Creating WeatherForm & WeatherMessage

6 - Exploring OpenWeatherMap.org
http://openweathermap.org is a website which provides current weather and also a free API for developers to use in
their applications.

7 - ES6 Promises

8 - Faking Our Call

9 - Making Our API Call

10 - Adding Loading Text

11 - Debugging & The React Developer Tools

12 - Advanced Debugging

13 - ES6 Aside: Arrow Functions

14 - Refactoring: Stateless Functional Components




                    Section 6: Deploying Your App To Production
1 - Intro: Tools You'll Use

2 - Installing Git

3 - Adding Git To Your App

4 - Joining GitHub & Generating SSH Keys

5 - Pushing To GitHub
07:30
Lecture 45	
Heroku Signup & Toolbelt
05:04
Lecture 46	
Deploying Your App
11:05
Lecture 47	
Feature Workflow
09:12
Lecture 48	
Fixing localhost
04:05



                    Section 7: Styling Your App With Foundation
1 - Intro: Foundation

2 - Installing Foundation

3 - Styling Navigation

4 - Styling Examples Page

Lecture 53	
Styling About Page
05:59
Lecture 54	
Styling Weather Page
06:42
Lecture 55	
Adding A Modal For Errors (Part 1)
16:32
Lecture 56	
Adding A Modal For Errors (Part 2)
11:39
Lecture 57	
Adding Custom CSS
12:12
Lecture 58	
Setting Up SCSS
10:10
Lecture 59	
Linking To Location & Wiring Up Nav Form
17:12
Lecture 60	
Fixing The Error Modal
07:45
Lecture 61	
Updating Our Boilerplate
10:11



                    Section 8: Testing & Component Lifecycle
1 - Project Overview

2 - Component Breakdown

3 - Adding The Navigation Bar

4 - Customizing The Navigation Bar

5 - Basics Of Testing

6 - Configuring Tests With Webpack & React

7 - Adding Routes & Container Components

8 - Clock Component

9 - Clock Component: Part 2

10 - Countdown Form

11 - Testing Our Form With Spies

12 - Starting The Count Down

13 - Testing That Counting Down Works

Lecture 75	
Creating Our Controls
17:52
Lecture 76	
Pausing, Starting, and Resetting
15:48
Lecture 77	
Component Lifecycle
11:16
Lecture 78	
Testing Pausing & Resetting
12:21
Lecture 79	
Project Setup: Timer
03:11
Lecture 80	
Project Solution: Timer (Part 1)
09:13
Lecture 81	
Project Solution: Timer (Part 2)
17:07
Lecture 82	
Foundation Settings & Karma Issues
12:59
Lecture 83	
Final Boilerplate
08:42



                    Section 9: Building A Todo Application
1 - App Demo & Learning Goals

2 - Creating The Root Component (TodoApp)

3 - Rendering Lists In React (TodoList & Todo)

4 - Testing List Components

5 - Challenge: AddTodo Is On You!

6 - Setting Up The Filter Component

7 - Testing The Filter Component

8 - The Spread Operator

9 - Wiring Up AddTodo

10 - Toggling Todos

11 - Testing Toggling Todos

12 - Storing Todos In Local Storage

13 - Testing Our TodoAPI

14 - Wiring Up Search (Part 1)

15 - Wiring Up Search (Part 2)

16 - Dates With Moment

17 - Adding Created At & Completed At Timestamps

18 - Styling TodoApp, AddTodo, & TodoSearch

19 - Styling Todo




                    Section 10: Redux
1 - Why Redux?

2 - Installing Redux

3 - Pure Functions

4 - Creating A Reducer & Getting App State

5 - Dispatching & Handling Actions

6 - Subscribing To Changes & Debugging

7 - Redux Actions: Add To Arrays

8 - Redux Actions: Removing From Arrays

9 - Working With Multiple Reducers

10 - Creating Action Generators

11 - Asynchronous Actions

12 - Organizing Your Actions and Reducers

13 - Todo: Creating & Testing Actions

14 - Todo: SearchText & ShowCompleted Reducers

15 - Todo: Todos Reducer

16 - Todo: Setting Up The Redux Store

17 - React-Redux: Provider & Connect

18 - Testing Reduxed Components

19 - Testing Reduxed Components (Part 2)

20 - Refactoring AddTodo

21 - Refactoring TodoSearch

22 - Setting Up Local Storage With Redux




                    Section 11: Databases & Authentication With Firebase
1 - Setting Up Firebase

2 - Saving Data

3 - Updating Data

4 - Removing & Navigating Data

Lecture 129	
Fetching Your Data
11:01
Lecture 130	
Working With Arrays
10:58
Lecture 131	
Async Actions (Adding Todos To Firebase)
14:58
Lecture 132	
Testing Async Actions
16:04
Lecture 133	
Saving Todo Updates
09:52
Lecture 134	
Testing Todo Updates
17:31
Lecture 135	
Fetch Todos From Firebase
11:20
Lecture 136	
Testing startAddTodos()
11:57
Lecture 137	
Webpack On Heroku
13:45
Lecture 138	
Environment Variables & Separate Databases
17:18
Lecture 139	
Heroku Environment Variables
05:03
Lecture 140	
Adding Login Page & Logout Button
16:42
Lecture 141	
Firebase Login & Logout
17:05
Lecture 142	
Private Pages & Redirects
16:36
Lecture 143	
Login Reducer & Actions
18:57
Lecture 144	
Firebase Security Rules
13:58
Lecture 145	
Testing With Authentication
13:45
Lecture 146	
Clearing Todos on Logout
07:43
