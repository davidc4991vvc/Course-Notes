                              Notes from Udemy course by Stephen Grider
                              Modern React with Redux
                              
Section 1 - Intro to React
1 - The course starts off with an intro and links to prebuilt Github examples

2 - These are links to completed projects source code for comparison

3 - The instructor explains the rationale behind using boilerplate skeleton projects to facilitate learning
    React\Redux. Also explained is the structure of the boilerplate apps and the files and libraries that
    they use. ES6\2016 is used and it is also explained that at this stage not all browsers will support
    the use of this version of Javascript. The work around is to use tooling called transpiling using a set
    of tools called Babel & Webpack which will make a file compatable with browsers.
    
4 - This lecture is about how to setup the environment using the instructors premade git repository, upon
    cloning or copying the repository npm install will need to be run in order to install the dependencies
    that are needed.
    
5 - This video is about the project setup which is a video player built using React, there is a mockup used to
    explain how the video player will function, also there is no dummy data used instead the Youtube API is going
    to be used and the player itself is able to be deployed. The command npm start is used which will in turn create
    a local sever as well as running Webpack.
    
  * Running a cloud based IDE like cloud9 will have different methods of running webpack server, you may also
    need to install dependencies using the -g for global and --save flags to ensure that you do not have to keep
    changing into directories. On cloud9 the following command works
    webpack-dev-server --port $PORT --host $IP  --content-base build/
    
6 - A taste of JSX
    To run an NPM Server - Use the npm start command
  * On Cloud9 this will not work as it will give an Application Not Running message so you will need to run 
    webpack-dev-server --port $PORT --host $IP  --content-base build
    The first change to a file to illustrate what is happening is to app.js in the components folder and the 
    React Simple Server text is replaced by Hello There, by going to the running server page and refreshing
    you will see that the messages have changed.
    The src folder is deleted to avoid having pre-existing boilerplate code, this means that you can start totally
    from scratch, the first step is to make an src folder and within it an index.js file
    React code is normally written in components or views, these terms are used to mean the same thing. Components
    are snippets of code that produce html.
    ES6 Syntax is used eg const, it is similar to declaring a variable but it does not change hence the const keyword
    rather than var.
    JSX allows for what looks like HTML to be written in Javascript eg <div> </div>  is used inside of a function.

7 - More JSX
    JSX cannot be interpreted by the browser, that is done by tools like Babel.
    JSX is not compulsory to write but is recommended.
    JSX improves legibility of component code.

8 - ES6 Import Statements

9 - ReactDOM vs React

10 - Differences Between Component Instances and Component Classes

11 - Render Targets

12 - Component Structure

13 - Youtube Search API Signup

14 - Export Statements

15 - Class-Based Components

16 - Handling User Events

17 - Introduction to State

18 - More on State

19 - Controlled Components

20 - Breather and Review

Section 2 - Ajax Requests with React
1 - Youtube Search Response

2 - Refactoring Functional Components to Class Components

3 - Props

4 - Building Lists with Map

5 - List Item Keys

6 - Video List Items

7 - Detail Component and Template Strings

8 - Handling Null Props

9 - Video Selection

10 - Styling with CSS

11 - Searching for Videos

12 - Throttling Search Term Input

13 - React Wrapup

Section 3 - Modelling Application State
1 - 

2 - 

3 -

4 - 

Section 4 - Managing App State with Redux

Section 5 - Middleware

Section 6 - Redux Router & Redux Form

