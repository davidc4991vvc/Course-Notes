                                  Course notes from the awesome Udemy course
                                     Learn and Understand NodeJS by
                                            Anthony Alicea
                                            
Section 1 - Introduction and setup
1 - Introduction and course goal
Basic introduction to the course and what the goal of the course is.

2 - Big Words and NodeJS
Learning NodeJS can be intimadting due to some of the terminology involved, the instructor has devised an
excellent strategy for handling this issue which is to specifically address these terms using "Big Word Alerts"
these are then broken down into to simple explanations.

3 - Watching the course
There are different video resolutions available and where possible it should be viewed in the highest 
resolution possible in order to fully observe what the instructor is doing.

4 - Command Line Interface
A basic guide to using the command line, there are huge amounts of indepth tutorials on using the cli
and it is highly recommended to do some learning as these skill are very transferable.

5 - Command Line References


Section 2 - V8: The Javascript Engine
1 - Conceptual Aside: Processors, Machine Language, and C++
A basic explanation of the 3 items above.

2 - Javascript Aside: Javascript Engines and The ECMAScript Specification

3 - V8 Under the Hood
The v8 engine is an open source JavaScrip engine

4 - Adding Features to Javascript



                    Section 3: The Node Core
1 - Conceptual Aside: Servers and Clients
A quick, very high level overview of client - server architecture.
There are explanations of the various architectures used including client - server at
http://tutorials.jenkov.com/software-architecture/client-server-architecture.html

2 - What Does Javascript Need to Manage a Server?

3 - The C++ Core

4 - The Javascript Core

5 - Downloading Lecture Source Code (Article)

6 - Let's Install and Run Some Javascript in Node



                    Section 4: Modules, Exports, and Require
1 - Conceptual Aside: Modules

2 - Javascript Aside: First-Class Functions and Function Expressions

3 - Let's Build a Module

4 - Javascript Aside: Objects and Object Literals

5 - Javascript Aside: Prototypal Inheritance and Function Constructors

6 - Javascript Aside: By Reference and By Value

7 - Javascript Aside: Immediately Invoked Function Expressions (IIFEs)

8 - How Do Node Modules Really Work?: module.exports and require

Lecture 24	
Javascript Aside: JSON
01:40
Lecture 25	
More on require
11:39
Lecture 26	
Module Patterns
19:12
Lecture 27	
exports vs module.exports
10:02
Lecture 28	
Requiring Native (Core) Modules
06:51
Lecture 29	
Modules and ES6
02:36
Lecture 30	
Web Server Checklist
01:21



                    Section 5: Events and the Event Emitter
1 - Conceptual Aside: Events

2 - Javascript Aside: Object Properties, First Class Functions, and Arrays

3 - The Node Event Emitter - Part 1

Lecture 34	
The Node Event Emitter - Part 2
11:58
Lecture 35	
Javascript Aside: Object.create and Prototypes
06:18
Lecture 36	
Inheriting From the Event Emitter
14:40
Lecture 37	
Javascript Aside: Node, ES6, and Template Literals
07:55
Lecture 38	
Javascript Aside: .call and .apply
03:40
Lecture 39	
Inheriting From the Event Emitter - Part 2
09:43
Lecture 40	
Javascript Aside: ES6 Classes
08:43
Lecture 41	
Inheriting From the Event Emitter - Part 3
06:00
Section 6: Asynchronous Code, libuv, The Event Loop, Streams, Files, and more…
Lecture 42	
Javascript Aside: Javascript is Synchronous
02:38
Lecture 43	
Conceptual Aside: Callbacks
01:29
Lecture 44	
libuv, The Event Loop, and Non-Blocking Asynchronous Execution
11:39
Lecture 45	
Conceptual Aside: Streams and Buffers
04:31
Lecture 46	
Conceptual Aside: Binary Data, Character Sets, and Encodings
11:09
Lecture 47	
Buffers
06:48
Lecture 48	
ES6 Typed Arrays
04:52
Lecture 49	
Javascript Aside: Callbacks
04:03
Lecture 50	
Files and fs
15:52
Lecture 51	
Streams
18:14
Lecture 52	
Conceptual Aside: Pipes
02:14
Lecture 53	
Pipes
15:51
Lecture 54	
Web Server Checklist
02:37
Section 7: HTTP and being a Web Server
Lecture 55	
Conceptual Aside: TCP/IP
07:55
Lecture 56	
Conceptual Aside: Addresses and Ports
03:11
Lecture 57	
Conceptual Aside: HTTP
06:06
Lecture 58	
http_parser
06:56
Lecture 59	
Let's Build a Web Server in Node
17:26
Lecture 60	
Outputting HTML and Templates
11:43
Lecture 61	
Streams and Performance
05:11
Lecture 62	
Conceptual Aside: APIs and Endpoints
02:37
Lecture 63	
Outputting JSON
06:39
Lecture 64	
Routing
11:02
Lecture 65	
Web Server Checklist
02:24
Section 8: NPM: the Node Package Manager
Lecture 66	
Conceptual Aside: Packages and Package Managers
03:07
Lecture 67	
Conceptual Aside: Semantic Versioning (semver)
04:46
Lecture 68	
npm and the npm registry: Other People's Code
04:59
Lecture 69	
init, nodemon, and package.json
13:02
Lecture 70	
npm Global Installation
Article
Lecture 71	
init, nodemon, and package.json - Part 2
15:17
Lecture 72	
Using Other People's Code
01:43
Section 9: Express
Lecture 73	
Installing Express and Making it Easier to Build a Web Server
16:01
Lecture 74	
Routes
04:32
Lecture 75	
Static Files and Middleware
14:58
Lecture 76	
Templates and Template Engines
15:54
Lecture 77	
Querystring and Post Parameters
18:21
Lecture 78	
RESTful APIs and JSON
05:21
Lecture 79	
Structuring an App
13:45
Section 10: Javascript, JSON, and Databases
Lecture 80	
Conceptual Aside: Relational Databases and SQL
03:48
Lecture 81	
Node and MySQL
09:28
Lecture 82	
Conceptual Aside: NoSQL and Documents
03:12
Lecture 83	
MongoDB and Mongoose
10:50
Lecture 84	
Web Server Checklist
01:07
Section 11: The MEAN stack
Lecture 85	
MongoDB, Express, AngularJS, and NodeJS
06:58
Lecture 86	
AngularJS: Managing the Client
10:32
Lecture 87	
AngularJS: Managing the Client (Part 2)
08:09
Lecture 88	
AngularJS: Managing the Client (Part 3)
19:17
Lecture 89	
Conceptual Aside: Angular 1, Angular 2, React, and more…
03:06
Lecture 90	
Working with The Full Stack (and being a Full Stack Developer) - Part 1
11:59
Section 12: Let's Build an App! (in record time)
Lecture 91	
NodeTodo: Software Requirements
02:20
Lecture 92	
Initial Setup
03:38
Lecture 93	
Setting up Mongo and Mongoose
09:09
Lecture 94	
Adding Seed Data
09:31
Lecture 95	
Creating our API
13:33
Lecture 96	
Testing our API
16:17
Lecture 97	
Future Lectures
Article
